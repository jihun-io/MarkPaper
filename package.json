{
  "name": "markpaper-electron",
  "version": "0.1.4",
  "productName": "MarkPaper",
  "private": true,
  "main": "public/electron.js",
  "homepage": "./",
  "dependencies": {
    "@monaco-editor/react": "^4.6.0",
    "@tailwindcss/typography": "^0.5.15",
    "concurrently": "^9.1.0",
    "cross-env": "^7.0.3",
    "dotenv": "^16.4.5",
    "jszip": "^3.10.1",
    "lucide-react": "^0.460.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-scripts": "5.0.1",
    "rehype-raw": "^7.0.0",
    "rehype-sanitize": "^6.0.0",
    "rehype-stringify": "^10.0.1",
    "remark-gfm": "^4.0.0",
    "remark-parse": "^11.0.0",
    "remark-rehype": "^11.1.1",
    "unified": "^11.0.5",
    "web-vitals": "^2.1.4",
    "zustand": "^5.0.1"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "electron:serve": "concurrently -k \"cross-env BROWSER=none NODE_ENV=development npm start\" \"wait-on http://localhost:3000 && cross-env NODE_ENV=development electron .\"",
    "electron:build": "cross-env NODE_ENV=production npm run build &&  electron-builder --universal",
    "electron:build-win": "cross-env NODE_ENV=production npm run build &&  electron-builder --win --x64",
    "electron:start": "electron ."
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "electron": "^33.2.0",
    "electron-builder": "^25.1.8",
    "tailwindcss": "^3.4.15",
    "wait-on": "^8.0.1"
  },
  "sideEffects": false,
  "build": {
    "extends": null,
    "appId": "io.jihun.markpaper.electron",
    "productName": "MarkPaper",
    "files": [
      "build/**/*",
      "assets/**/*",
      "public/**/*",
      "!node_modules/lucide-react/dist/!(esm)/**",
      "!node_modules/lucide-react/icons/**",
      "!node_modules/lucide-react/lib/**",
      "!**/node_modules/*/{CHANGELOG.md,README.md,README,readme.md,Readme.md}",
      "!**/node_modules/*/{test,__tests__,tests,powered-test,example,examples}",
      "!**/node_modules/*/LICENSE",
      "!**/node_modules/*/license",
      "!**/node_modules/*.LICENSE.txt",
      "!**/node_modules/*.license.txt",
      "!**/node_modules/*/package.json",
      "!**/node_modules/*/.npmignore",
      "!**/node_modules/*/.gitignore",
      "!**/node_modules/*/.gitattributes",
      "!**/node_modules/*/docs",
      "!**/node_modules/*/doc",
      "!**/node_modules/*.d.ts",
      "!**/node_modules/.bin",
      "!locales",
      "locales/en-US.pak",
      "locales/ko.pak",
      "!node_modules/monaco-editor/min/vs/basic-languages/!(html|markdown)/**",
      "!node_modules/monaco-editor/min/vs/editor/standalone/browser/accessibilityHelp/**"
    ],
    "directories": {
      "buildResources": "assets",
      "output": "dist"
    },
    "mac": {
      "fileAssociations": [
        {
          "ext": "md",
          "name": "Markdown File",
          "role": "Editor"
        }
      ],
      "icon": "assets/icons/mac/icon_512x512@2x.icns",
      "category": "public.app-category.utilities",
      "target": [
        "dmg",
        "zip"
      ],
      "hardenedRuntime": true,
      "gatekeeperAssess": false,
      "entitlements": "entitlements.mac.plist",
      "entitlementsInherit": "entitlements.mac.plist",
      "identity": "Jihun Kim (62494T7ZTJ)"
    },
    "afterSign": "./scripts/notarize.js",
    "win": {
      "fileAssociations": [
        {
          "ext": "md",
          "name": "Markdown File",
          "role": "Editor"
        }
      ],
      "icon": "assets/icons/windows/icon.ico",
      "extraResources": [
        {
          "from": "assets",
          "to": "assets",
          "filter": [
            "**/*"
          ]
        }
      ]
    },
    "asar": true,
    "asarUnpack": [
      "assets/**/*",
      "build/assets/**/*"
    ]
  }
}
